name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
            env:
              MONGO_URI: 'mongodb://localhost:27017/superData'
              MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
              MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        strategy:
          matrix:
            nodejs_version: [18, 19, 20]
            os: ['ubuntu-latest']
            exclude:
              - os: 'macos-latest'
                nodejs_version: 18
        
        name: Unit Testing
        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result ${{ matrix.os }}_${{matrix.nodejs_version}}
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ['ubuntu-latest']
        container:
          image: node:18
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            options:
              --name mongo
            env:
              MONGO_URI: 'mongodb://mongo:27017/superData'
              MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
              MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: 18
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          continue-on-error: true
          run: npm run coverage  

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Coverage-Test-Result
            path: coverage
            retention-days: 5
        
        - name: Test github env
          run: echo "TEST_GIT_ENV='Testing'" > $GITHUB_ENV
    dev-deploy:
      needs: [code-coverage, unit-testing]
      runs-on: ubuntu-latest
      steps:
        - name: checkout Repo
          uses: actions/checkout@v4

        - name: Install Kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'

        - name: Run kubectl commands
          run: |
            echo $TEST_GIT_ENV
            echo ------------------------------
            kubectl version --short
            echo ------------------------------
            kubectl get nodes

    